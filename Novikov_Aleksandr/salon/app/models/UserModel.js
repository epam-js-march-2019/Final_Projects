/* TODO
* 1. There is a try catch block at Model Creation that
* prevents schema re-define error, Should it be rewritten in a better way?
* https://github.com/kriasoft/react-starter-kit/issues/1418#issuecomment-398196569
 */

const mongoose = require('mongoose');
const jwt = require('jsonwebtoken');
const config = require('config');
const {recordSchema} = require('./RecordModel');

const userSchema = new mongoose.Schema({
	name: {
		type: String,
		required: true,
		minlength: 5,
		maxlength: 50,
		trim: true
	},
	phone: {
		type: Number,
		required: true
	},
	email: {
		type: String,
		required: true,
		minlength: 5,
		maxlength: 255,
		unique: true
	},
	password: {
		type: String,
		required: true,
		minlength: 5,
		maxlength: 1024,
	},
	records: {
		type: [recordSchema],
		required: false,
		default: []
	},
	pastRecords: {
		type: [recordSchema],
		required: false,
		default: []
	}
});

/* A way to add a method to User object generated by UserModel */
userSchema.methods.generateAuthToken = function () {
	/* arg1: payload can be an object representing the user
	* arg2: private key*/
	const token = jwt.sign({
			id: this._id,
			name: this.name
		},
		/* Private key is stored in ENV variable
		*	that is read by config library */
		config.get('jwtPrivateKey')
	);
	return token;
};

/* I dont actually know why, but looks like if model is imported in several
 different places, schema re-write can occur, and it is not allowed, so this
 try catch block uses previous model if can define a new one*/
let UserModel;
try {
	UserModel = mongoose.model('User', userSchema);
}
catch (err) {
	UserModel = mongoose.model('User');
}
module.exports = UserModel;


